<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hexo - Tag - 我的全新 Hugo 网站</title>
        <link>http://example.org/tags/hexo/</link>
        <description>Hexo - Tag - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 21 Aug 2021 07:27:21 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/hexo/" rel="self" type="application/rss+xml" /><item>
    <title>vscode-hexo-utils使用教程</title>
    <link>http://example.org/vscode-hexo-utils%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
    <pubDate>Sat, 21 Aug 2021 07:27:21 &#43;0800</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/vscode-hexo-utils%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
    <description><![CDATA[前言 为了解决Typecho需要自建服务器，容易数据丢失的问题，从Typecho转移到Hexo，但是Hexo需要解决只能本地写博客，而且还要安装一堆依赖的问题，又从网上学到了Hexo+Github Acitons的组合，这样只要有浏览器就能登录Github写博客。
最稳妥的的还是使用原生的Hexo环境（node.js），这样可以本地先预览博客最终效果，再发布，这样可以减少commit次数。
只是本地写博客如果采用Hexo最原始的方式，即：先cd到Hexo目录-&gt;再hexo new post-&gt;再到_posts目录中找到新建的md文件进行编辑，就显得非常繁琐不友好了。
经过一番折腾，终于找到了vscode-hexo-utils这款神器。
介绍 vscode-hexo-utils是一款VSCODE插件，可以实现在VSCODE中方便的写Hexo博客（新建、编辑、管理MD文件），省去了先cd到Hexo目录-&gt;再hexo new post-&gt;再到_posts中找到新建的md文件进行编辑的步骤，而且支持粘贴图片后自动保存到相应目录并插入进MD中，简直美滋滋。 同时还支持按Draft、Post、Categories、Tags管理文章，具体效果如图： 安装 首先得安装VSCODE&hellip;此步略。 然后在VSCODE的插件市场（Ctrl+Shift+X调出）中搜索vscode-hexo-utils，找到并安装它。
设置 安装完毕后，进入VSCODE的设置(Ctrl+,)，在新界面顶部搜索框输入@ext:fantasy.vscode-hexo-utils将插件的设置项筛选出来。这里介绍几个重要的设置。
Hexo: Generate Time Format 这里设置新建文章、插入图片时自动生成的时间格式，留空的话，生成的时间形如：2021-08-21T07:27:21+08:00，可以自定义，具体变量参考，举个栗子：
1、YYYY-MM-DD HH:mm:ss 生成的时间形如:2021-08-23 14:18:57 2、YYYY-MM-DD HH:mm 生成的时间形如:2021-08-23 14:18
Hexo: Hexo Project Root 这里设置Hexo博客所在目录，建议留空，并设置为不同步。
Hexo › Markdown: Resource 这个配置项会开启代码中的 markdown 插件，用于支持一些 hexo 自己的语法。
Hexo: Upload 设置是否自动将图片上传到图床，支持路过图床和腾讯oss，下面的两个设置对应路过图床和腾讯OSS，点击在setting.json中编辑，将自己平台的账号密码填入：
1 2 3 4 &#34;hexo.uploadImgchr&#34;: { &#34;username&#34;: &#34;用户名&#34;, &#34;password&#34;: &#34;密码&#34; } Hexo: Upload Type 选择默认的图床服务
使用 首先使用VSCODE打开Hexo项目目录， 然后在VSCODE左侧找到vscode-hexo-utils插件图标。
新建文章 鼠标放在POST栏目的Bar上，就能看到新增和刷新按钮，点击新增即可按照事先在Hexo设置的模板新建文章。 在文章中插入图片 1、使用图床 不知道是不是我设置的问题，路过图床总时提示失败，后来发现是路过图床更换了域名，已联系插件作者修复。 2、不使用图床 插件会自动将图片保存至MD文件所在目录的同名子目录中。]]></description>
</item>
<item>
    <title>VSCODE写HEXO博客时自动插入FrontMatter的实现</title>
    <link>http://example.org/vscode%E5%86%99hexo%E5%8D%9A%E5%AE%A2%E6%97%B6%E8%87%AA%E5%8A%A8%E6%8F%92%E5%85%A5frontmatter%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Fri, 20 Aug 2021 12:39:57 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/vscode%E5%86%99hexo%E5%8D%9A%E5%AE%A2%E6%97%B6%E8%87%AA%E5%8A%A8%E6%8F%92%E5%85%A5frontmatter%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[第一步 首先点VSCODE的文件-&gt;首选项-&gt;用户片段，在弹出来的对话框中选择markdown.json。输入以下内容：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { &#34;Hexo Front Matter&#34;: { &#34;prefix&#34;: &#34;---&#34;, # 触发代码块的输入字符 &#34;body&#34;: [ &#34;---&#34;, &#34;title: ${TM_FILENAME_BASE}&#34;, # 自动将文件名作为标题 &#34;date: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}&#34;, # 自动输入当前时间 &#34;update: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}&#34;, # 自动输入当前时间 &#34;tags:&#34;, &#34; - &#34;, &#34; - &#34;, &#34;categories:&#34;, &#34; - &#34;, &#34; - &#34;,	&#34;description: &#34;, &#34;cover: &#34;, &#34;keywords: &#34;, &#34;---\r&#34; ], &#34;description&#34;: &#34;Hexo Front Matter&#34; } } 第二步 然后在VSCODE的设置中添加配置：]]></description>
</item>
<item>
    <title>hexo主题美化样例博客收集</title>
    <link>http://example.org/hexo%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E6%A0%B7%E4%BE%8B%E5%8D%9A%E5%AE%A2%E6%94%B6%E9%9B%86/</link>
    <pubDate>Sat, 14 Aug 2021 23:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/hexo%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E6%A0%B7%E4%BE%8B%E5%8D%9A%E5%AE%A2%E6%94%B6%E9%9B%86/</guid>
    <description><![CDATA[很多酷炫效果 https://jinan6.vip/posts/3112011529/
###markdown各种特殊语法，彩色横条、folding、容器等 https://zykj.js.org/posts/e297feab/
folding没解决，暂时使用toggle，仅butterfly主题有效 效果见：https://butterfly.js.org/posts/4aa8abbe/#tag-hide 语法：]]></description>
</item>
<item>
    <title>Hexo主题Shoka &amp; multi-markdown-it渲染器使用说明</title>
    <link>http://example.org/theme-shoka-doc/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/theme-shoka-doc/</guid>
    <description><![CDATA[:::info 跳票N久终于更新的简单的使用说明
hexo-theme-shoka ：本博客自用的主题 hexo-renderer-multi-markdown-it：配套的markdown渲染器 已经支持hexo 5。。。本文档和bug不定期更新中。 如果有什么功能需求，欢迎留言。 :::
:::warning 当前版本更新至 0.2.5，更新记录点此 :::
:::primary 🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能 :::
设计缘由 前几年在Bear和Evernote上整理了大量笔记，非常喜欢Bear默认的markdown渲染样式。 后来因为换了安卓手机，用不了Bear，四处搜寻替代品，没有满意的。 然后阴差阳错知道了Hexo，又得知Github也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在Github Pages。
因为这个博客是用来记笔记的，故起名书架。 对应的主题即Theme.Shoka，可以说是为了笔记阅读而生的主题。 样式严重参考Bear，部分代码严重参考NexT。
Hexo的默认及常用渲染器均使用highlight.js进行代码高亮，而我喜欢Prism.js，故重写了一个渲染器配合主题食用。 渲染器取名multi，因为集成了很多很多很多markdown-it插件，以及压缩静态文件的功能。 （最新版的默认渲染器也支持Prism.js了，可喜可贺，但不想用，哈哈哈哈哈哈哈
墙内Github Pages访问速度时而感人，所以用了jsDelivr加速，主要是因为它可以按需合并依赖文件。
快速安装 1 2 # cd your-blog git clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka 打开主题目录，内有example文件夹，提供了配置文件的demo供参考。
安装依赖插件 在应用主题之前，必须至少安装 hexo-renderer-multi-markdown-it 渲染插件 和 hexo-autoprefixer。
插件安装与配置教程戳此
应用主题 修改站点配置 修改站点配置文件&lt;root&gt;/_config.yml，把主题改为 shoka
1 theme: shoka 修改主题配置 主题配置的所有参数在&lt;root&gt;/themes/shoka/_config.yml文件中。
为了方便主题升级，请在根目录新建一个yml文件，命名为_config.shoka.yml。 也就是说，所有主题的自定义配置均保存于&lt;root&gt;/_config.shoka.yml文件。
主题的基础配置可以参考这里 界面显示相关的配置参考这里
更新记录 标签含义： ❗ 需要手动操作的更新信息 ⚠️ 需要注意的更新信息 🔧 已修复的问题 ⌛ TODO]]></description>
</item>
<item>
    <title>Step.1 依赖插件</title>
    <link>http://example.org/dependents/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/dependents/</guid>
    <description><![CDATA[:::primary 🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能 :::
:::warning 请务必将hexo-renderer-multi-markdown-it升级到最新版，目前为 0.1.5 :::
Theme Shoka依赖以下Hexo插件
插件名称 npm地址 功能 依赖程度 hexo-renderer-multi-markdown-it 链接 md文件渲染器，压缩css/js/html 必需 hexo-autoprefixer 链接 给生成的css文件们添加浏览器前缀 必需 hexo-algoliasearch 链接 站内搜索功能 搜索按钮失灵 hexo-symbols-count-time 链接 文章或站点字数及阅读时间统计 统计没有 hexo-feed 链接 生成Feed文件 Feed文件没有 没有正确安装以上插件的话，本主题会报错or无法正确显示or部分功能失效。 hexo-renderer-multi-markdown-it请注意升级到最新版
安装完以上插件后，修改站点配置文件，加入相关配置。
multi-markdown-it安装与配置 安装 安装前，记得务必卸载掉默认的hexo-renderer-marked，以及别的markdown文件渲染器。
1 2 3 npm un hexo-renderer-marked --save # 或者 yarn remove hexo-renderer-marked 安装
1 2 3 npm i hexo-renderer-multi-markdown-it --save # 或者 yarn add hexo-renderer-multi-markdown-it 如果安装缓慢，或者失败 如报错]]></description>
</item>
<item>
    <title>Step.2 基本配置</title>
    <link>http://example.org/config/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/config/</guid>
    <description><![CDATA[:::primary 🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能 :::
站点别称 1 alternate: Yume Shoka 这里设置的名称代替Logo，显示在页面顶部，以及页尾©️处
静态文件目录 1 statics: / #//cdn.jsdelivr.net/gh/amehime/shoka@latest/ 默认值是/，指使用本地静态文件 可以修改成//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/这种形式，以使用jsDelivr进行加速。 PS：jsDelivr并不是实时更新，重新生成文件后需要耐心等待
1 2 3 css: css js: js images: images 静态文件所处目录的实际目录名，这些一般不改。
夜间模式 1 darkmode: # true 默认情况下，是否开启夜间模式取决于（优先级从高到低）：
访客点击页面头部切换按钮的自行选择 访客切换了浏览设备的主题色调 您的darkmode配置项 自动定位 1 auto_scroll: # false 默认情况下，再次打开页面时，会自动滚动到上次浏览的位置。 这个选项设为false时将停用此功能。
加载动画 1 2 3 4 # 是否显示页面加载动画loading-cat loader: start: true # 当初次打开页面时，显示加载动画 switch: true # tab切换到其他页面时，显示加载动画 tab切换后只是显示loading动画，实际并未重新加载页面
页面特效 单击页面的烟花效果配置如下]]></description>
</item>
<item>
    <title>Step.3 界面显示</title>
    <link>http://example.org/display/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/display/</guid>
    <description><![CDATA[:::primary 🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能 :::
首页置顶文章 在文章的Front Matter设置sticky: true，则该文章将显示在首页最上方的置顶文章列。 多篇文章按照发布时间倒序排列，不分页。
1 2 3 4 --- title: 置顶文章 sticky: true --- 首页精选分类 想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。
首先，修改站点配置： 找到category_map:，配置每个分类对应的英文映射，比如：
1 2 3 4 5 6 7 8 category_map: 计算机科学: computer-science Java: java C++: cpp 二进制杂谈: note 计算机程序设计（C++）-西安交通大学: course-1 零基础学Java语言-浙江大学-翁恺: course-1 面向对象程序设计-Java语言-浙江大学-翁恺: course-2 注意：hexo会自动处理路径中的特殊字符，~`!@#$%^&amp;*()-_+=[]{}|\;:&quot;&rsquo;&lt;&gt;,.?以及空格，这些全部会被替换成- 所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的cover.jpg
在&lt;root&gt;/source/_posts文件夹相应的目录里，存放封面图 例子：如 第1周 计算 这篇文章。 所处的分类是
1 2 categories: - [计算机科学, Java, 零基础学Java语言-浙江大学-翁恺] 现在需要在首页显示零基础学Java语言-浙江大学-翁恺这个分类，翻转卡片后，显示这个分类下的文章们。 而该分类经过英文映射，它的路径将是/computer-science/java/course-1/。]]></description>
</item>
<item>
    <title>Step.4 主题特殊功能</title>
    <link>http://example.org/special/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/special/</guid>
    <description><![CDATA[:::primary 🚀快速开始 - 💌依赖插件 - 📌基本配置 - 🌈界面显示 - 🦄特殊功能 :::
:::info 以下介绍可以使用的markdown或者标签代码。 功能大部分基于hexo-renderer-multi-markdown-it渲染器，尤其是代码块的显示，与默认渲染器不兼容。 :::
links 链接块 本功能参考NexT，基于Hexo Tag功能，用来建立友链或其他网址链接功能。
文章中的使用格式：
使用links标签块，包围yml语法书写的内容，字段包括 &ndash;|&ndash;|&ndash; site|站点名称|必填 owner|管理员名字|可选，默认为site的值 url|站点链接|必填 desc|站点描述|可选，默认为url的值 image|站点图片|可选，默认为images/404.png color|方块颜色|可选，默认为#666
1 2 3 4 5 6 7 8 &amp;#123;% links %&amp;#125; - site: #站点名称 owner: #管理员名字 url: #站点网址 desc: #简短描述 image: #一张图片 color: #颜色代码 &amp;#123;% endlinks %&amp;#125; 举个栗子：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 &amp;#123;% links %&amp;#125; - site: 優萌初華 owner: 霜月琉璃 url: https://shoka.]]></description>
</item>
</channel>
</rss>
