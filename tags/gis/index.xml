<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>GIS - Tag - 我的全新 Hugo 网站</title>
        <link>http://example.org/tags/gis/</link>
        <description>GIS - Tag - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 11 Mar 2023 22:58:24 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/gis/" rel="self" type="application/rss+xml" /><item>
    <title>计算多边形镂空区域的坐标</title>
    <link>http://example.org/%E8%AE%A1%E7%AE%97%E5%A4%9A%E8%BE%B9%E5%BD%A2%E9%95%82%E7%A9%BA%E5%8C%BA%E5%9F%9F%E7%9A%84%E5%9D%90%E6%A0%87/</link>
    <pubDate>Sat, 11 Mar 2023 22:58:24 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/%E8%AE%A1%E7%AE%97%E5%A4%9A%E8%BE%B9%E5%BD%A2%E9%95%82%E7%A9%BA%E5%8C%BA%E5%9F%9F%E7%9A%84%E5%9D%90%E6%A0%87/</guid>
    <description><![CDATA[背景 已知多边形A（{&quot;Type&quot;:&quot;MultiPolygon&quot;}）以及其包含的多个子多边形（均为Mu]]></description>
</item>
<item>
    <title>geojson对象与polygon_wkt、wkb对象（MySQL等数据库中的对象）互转</title>
    <link>http://example.org/geojson%E5%AF%B9%E8%B1%A1%E4%B8%8Epolygon_wkt-wkb%E5%AF%B9%E8%B1%A1mysql%E7%AD%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BA%92%E8%BD%AC/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/geojson%E5%AF%B9%E8%B1%A1%E4%B8%8Epolygon_wkt-wkb%E5%AF%B9%E8%B1%A1mysql%E7%AD%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E4%BA%92%E8%BD%AC/</guid>
    <description><![CDATA[来源：https://gist.github.com/drmalex07/5a54fc4f1db06a66679e 1 2 3 4 5 6 7 8 9 10 11 12 13]]></description>
</item>
<item>
    <title>GEOJSON标准格式学习</title>
    <link>http://example.org/geojson%E6%A0%87%E5%87%86%E6%A0%BC%E5%BC%8F%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/geojson%E6%A0%87%E5%87%86%E6%A0%BC%E5%BC%8F%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[转载自：https://www.jianshu.com/p/852d7ad081b3 最近做的项目需要详细了解geojson，因此查了一些资料]]></description>
</item>
<item>
    <title>MySQL地理空间查询——备忘录</title>
    <link>http://example.org/mysql%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E5%A4%87%E5%BF%98%E5%BD%95/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/mysql%E5%9C%B0%E7%90%86%E7%A9%BA%E9%97%B4%E6%9F%A5%E8%AF%A2%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
    <description><![CDATA[PostgreSQL 空间st_contains，st_within空间包含搜索优化 - 降IO和降CPUboundbox ST_Contains函数-Oracle 、]]></description>
</item>
<item>
    <title>Mysql或者Postgresql判断一个点是否存在于MULTIPOLYGON(多多边形)</title>
    <link>http://example.org/mysql%E6%88%96%E8%80%85postgresql%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E4%BA%8Emultipolygon-%E5%A4%9A%E5%A4%9A%E8%BE%B9%E5%BD%A2/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/mysql%E6%88%96%E8%80%85postgresql%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E4%BA%8Emultipolygon-%E5%A4%9A%E5%A4%9A%E8%BE%B9%E5%BD%A2/</guid>
    <description><![CDATA[Postgresql 转载自：https://blog.csdn.net/weixin_47553445/article/details/115268077 语法]]></description>
</item>
<item>
    <title>MySQL测试判断多边形（Polygon）及镂空多边形（MultiPolygon）是否包含点</title>
    <link>http://example.org/mysql%E6%B5%8B%E8%AF%95%E5%88%A4%E6%96%AD%E5%A4%9A%E8%BE%B9%E5%BD%A2polygon%E5%8F%8A%E9%95%82%E7%A9%BA%E5%A4%9A%E8%BE%B9%E5%BD%A2multipolygon%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%82%B9/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/mysql%E6%B5%8B%E8%AF%95%E5%88%A4%E6%96%AD%E5%A4%9A%E8%BE%B9%E5%BD%A2polygon%E5%8F%8A%E9%95%82%E7%A9%BA%E5%A4%9A%E8%BE%B9%E5%BD%A2multipolygon%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%82%B9/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -- 1.创建测试表 CREATE TABLE zone ( id int(10) unsigned NOT NULL AUTO_INCREMENT, polygongeo geometry NOT NULL, PRIMARY KEY (id) ) ENGINE=MYISAM DEFAULT CHARSET=utf8; -- 2.插入多边形数据 insert into zone(polygongeo) values(ST_GeomFromText(&#39;POLYGON((1 1,1 5,5 5,5 1,1 1))&#39;)); -- 3.判断点]]></description>
</item>
<item>
    <title>Python &#43; SQLite &#43; ST_Geometry</title>
    <link>http://example.org/python--sqlite--st_geometry/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/python--sqlite--st_geometry/</guid>
    <description><![CDATA[https://www.cnblogs.com/lqqgis/p/12641794.html]]></description>
</item>
<item>
    <title>Python中sqlite使用spatial扩展</title>
    <link>http://example.org/python%E4%B8%ADsqlite%E4%BD%BF%E7%94%A8spatial%E6%89%A9%E5%B1%95/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/python%E4%B8%ADsqlite%E4%BD%BF%E7%94%A8spatial%E6%89%A9%E5%B1%95/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 import sqlite3 connR = sqlite3.connect(&#39;:memory:&#39;) connR.enable_load_extension(True) #now we can load the extension # depending on your OS and sqlite/spatialite version you might need to add #]]></description>
</item>
<item>
    <title>Python计算坐标集的中心点坐标</title>
    <link>http://example.org/python%E8%AE%A1%E7%AE%97%E5%9D%90%E6%A0%87%E9%9B%86%E7%9A%84%E4%B8%AD%E5%BF%83%E7%82%B9%E5%9D%90%E6%A0%87/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/python%E8%AE%A1%E7%AE%97%E5%9D%90%E6%A0%87%E9%9B%86%E7%9A%84%E4%B8%AD%E5%BF%83%E7%82%B9%E5%9D%90%E6%A0%87/</guid>
    <description><![CDATA[https://stackoverflow.com/a/68503006 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 def get_centroid(points): x = points[:,0] y = points[:,1] # Solving for polygon signed area A = 0 for i, value in enumerate(x): if i + 1 == len(x): A += (x[i]*y[0] - x[0]*y[i])]]></description>
</item>
<item>
    <title>判断点是否在多边形内（check is the point in polygon）</title>
    <link>http://example.org/%E5%88%A4%E6%96%AD%E7%82%B9%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%86%85check-is-the-point-in-polygon/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>xxxx</author>
    <guid>http://example.org/%E5%88%A4%E6%96%AD%E7%82%B9%E6%98%AF%E5%90%A6%E5%9C%A8%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%86%85check-is-the-point-in-polygon/</guid>
    <description><![CDATA[方法一（参考Python一行代码处理地理围栏） 1 2 3 4 5 6 7 8 9 10 11 12 13 from shapely.geometry import Point from shapely.geometry.polygon import Polygon polygon_data= [[114.3458104133606,30.476167529462785],[114.34512376785278,30.475575748963195],[114.34576749801636,30.474540124433936],[114.3467652797699,30.475363076967565],[114.34693694114685,30.476102803645833],[114.3458104133606,30.476167529462785]] point1 = Point([114.34605717658997,30.475584995561178]) point2 = Point([114.346604347229,30.476518897432545]) polygon = Polygon(polygon_data) print(polygon.contains(point1)) print(polygon.contains(point2)) #输出 # True # False 方法二 光线追]]></description>
</item>
</channel>
</rss>
