<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>alpine - Tag - 我的全新 Hugo 网站</title>
        <link>http://example.org/tags/alpine/</link>
        <description>alpine - Tag - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="http://example.org/tags/alpine/" rel="self" type="application/rss+xml" /><item>
    <title>【转载】基于alpine镜像构建自己的flask镜像</title>
    <link>http://example.org/%E8%BD%AC%E8%BD%BD%E5%9F%BA%E4%BA%8Ealpine%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84flask%E9%95%9C%E5%83%8F/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E8%BD%AC%E8%BD%BD%E5%9F%BA%E4%BA%8Ealpine%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84flask%E9%95%9C%E5%83%8F/</guid>
    <description><![CDATA[python官方镜像地址：
http://hub.docker.com/_/python
拉取官方的python镜像
1 docker pull python:3.7-alpine 交互式方式生成一个python容器
1 docker run -it --name python37 --rm python:3.7-alpine /bin/sh 进入交互式容器，查看当前python版本
1 python --version 设置pip的阿里云镜像源
1 2 3 4 5 6 7 mkdir $HOME/.pip/ tee $HOME/.pip/pip.conf &lt;&lt;-&#39;EOF&#39; [global] trusted-host=mirrors.aliyun.com index-url=https://mirrors.aliyun.com/pypi/simple EOF 确认一下是否配置成功
1 cat $HOME/.pip/pip.conf 我们的python使用的是alpine系统
alpine使用的是apk包管理器
命令如：
1 2 3 4 5 apk add apk update apk del alpine默认的镜像源也比较慢，我们也换成国内的
设置alpine镜像源
1 2 3 echo http://mirrors.ustc.edu.cn/alpine/v3.7/main &gt; /etc/apk/repositories echo http://mirrors.ustc.edu.cn/alpine/v3.7/community &gt;&gt; /etc/apk/repositories 设置后要执行]]></description>
</item>
<item>
    <title>Docker部署IP和地址行政区域归属查询工具</title>
    <link>http://example.org/docker%E9%83%A8%E7%BD%B2ip%E5%92%8C%E5%9C%B0%E5%9D%80%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%9F%9F%E5%BD%92%E5%B1%9E%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/docker%E9%83%A8%E7%BD%B2ip%E5%92%8C%E5%9C%B0%E5%9D%80%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%9F%9F%E5%BD%92%E5%B1%9E%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</guid>
    <description><![CDATA[构建Dockerfile Dockerfile如下
1 2 3 4 5 6 7 8 9 10 FROM postgis/postgis:13-3.1-alpine WORKDIR /app RUN apk --update --no-cache add python3-dev libffi-dev gcc musl-dev make libevent-dev build-base py3-pip python3 \ &amp;&amp;pip install wheel \ &amp;&amp;pip install gevent \ &amp;&amp;pip install --no-cache-dir flask gunicorn shapely aiohttp psycopg2 \ &amp;&amp;apk del python3-dev libffi-dev gcc musl-dev make libevent-dev build-base COPY . . EXPOSE 8848 5432 CMD gunicorn app:app -c gunicorn.conf.py 因为构建镜像基于alpine，遇到安装上面代码中提到的python库文件错误时解放方案来源网络 alpine安装gevent成功：]]></description>
</item>
</channel>
</rss>
