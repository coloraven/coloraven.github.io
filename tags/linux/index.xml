<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - Tag - 我的全新 Hugo 网站</title>
        <link>http://example.org/tags/linux/</link>
        <description>Linux - Tag - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 16 Mar 2023 13:57:13 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Windows下恢复Linux格式硬盘数据记录</title>
    <link>http://example.org/windows%E4%B8%8B%E6%81%A2%E5%A4%8Dlinux%E6%A0%BC%E5%BC%8F%E7%A1%AC%E7%9B%98%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Thu, 16 Mar 2023 13:57:13 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/windows%E4%B8%8B%E6%81%A2%E5%A4%8Dlinux%E6%A0%BC%E5%BC%8F%E7%A1%AC%E7%9B%98%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[背景 小主机（CentOS 7）挂载移动固态硬盘，有次重启系统后，突然开不了机，发现硬盘盒不亮灯了，平时数据都存在挂载的移动固态硬盘里，所以估计移动硬盘挂了。同时小主机内置emmc里还有数据也需要备份，所以需要找一款能在windows下打开浏览Linux格式硬盘的软件。
寻找历程 一番寻找后发现UFS_Explorer才是需要的，期间还有DiskInternals Linux Reader 4.15.2、ext2explore-2.2.71等都试了，不是不支持我硬盘的格式，就是需要付费使用。尝试之后UFS_Explorer才符合我的需求，故记录在此，供自己以后查看。
软件地址 阿里云盘中，搜索即得。]]></description>
</item>
<item>
    <title>Win下利用DockerDesktop打造Linux开发环境</title>
    <link>http://example.org/win%E4%B8%8B%E5%88%A9%E7%94%A8dockerdesktop%E6%89%93%E9%80%A0linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
    <pubDate>Fri, 23 Dec 2022 15:09:19 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/win%E4%B8%8B%E5%88%A9%E7%94%A8dockerdesktop%E6%89%93%E9%80%A0linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
    <description><![CDATA[开发环境要求 基于Ubuntu或者Debian，系统源改为国内源， 系统时间为东八区 安装node、golang、python，源都改为国内源 使用ssh秘钥登录，方便vscode链接 生产目录映射到宿主机目录，防止工作数据丢失 暴露端口数至少40个，以满足折腾需求 解决中文乱码问题 符合要求的Dockerfile 参考此链接：https://blog.csdn.net/shykevin/article/details/105305322
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 FROM node:19-bullseye-slim # 修改更新源为阿里云 RUN sed -i &#34;s@http://\(deb\|security\).debian.org@http://mirrors.163.com@g&#34; /etc/apt/sources.list # ADD . / # 时区为上海 ENV TZ Asia/Shanghai # 设置时区,设置utf-8编码 RUN apt-get update &amp;&amp; apt-get install -y tzdata locales python3-pip cron openssh-server python3 curl wget git &amp;&amp; apt-get clean all &amp;&amp; \ ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone &amp;&amp; \ locale-gen en_US.]]></description>
</item>
<item>
    <title>手摸手带你Docker从入门到实践</title>
    <link>http://example.org/%E6%89%8B%E6%91%B8%E6%89%8B%E5%B8%A6%E4%BD%A0-docker%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</link>
    <pubDate>Mon, 16 Aug 2021 18:50:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E6%89%8B%E6%91%B8%E6%89%8B%E5%B8%A6%E4%BD%A0-docker%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</guid>
    <description><![CDATA[手摸手带你 Docker 从入门到实践 在下最近遇到要在服务器上安装 Mysql、Nginx、EasyMock 等工具的场景，这里记录一下我使用 Docker 安装的过程，希望也能在类似的场景中帮助到大家～
本文前备知识需要一些 Linux 的一些基本命令，推介先看一下 &lt;半小时搞会 CentOS 入门必备基础知识&gt; 这篇文章。
CentOS 版本： 7.6
Nginx 版本： 1.16.1
Docker 版本： 19.03.12
你多学一样本事，就少说一句求人的话
1. 介绍 1.1 出现的原因 前后端开发到测试到生产的过程中，经常会遇到一个问题，明明我在本地跑没问题，为什么到测试环境或者生产环境就报错了了呢，常常这是因为开发、测试、生产的环境与配置不同导致的。
折腾过环境配置的人都明白其中麻烦，换一台系统、虚拟机、机器，就又要重来一次，费力费时。由于环境和配置的原因，各种奇奇怪怪因为环境和配置的 Bug，总是像打地鼠游戏里面的地鼠一样不断冒出来 🐹
![](c9ce28e3e43e4bb292b92fd1a4786fe9tplv-k3u1fbpfcp-zoom-1.image#vwid=1586&amp;vhei=600&quot; alt=&ldquo;Docker&rdquo; style=&ldquo;zoom:80%;&rdquo; /&gt;
Docker 对这个问题给出了一个很好的解决方案，通过镜像将除了系统之外所需要的系统环境由下而上打包，达到服务跨平台的无缝运作。也就是说，安装的时候，把特定的环境一模一样地搬过来，从而解决「在我的电脑上能跑，在 xx 环境就跑不了」的情况。
另外一个重要的原因，就是轻量，基于容器的虚拟化，Docker 的镜像仅包含业务运行所需的 runtime 环境，一个 CentOS/Ubuntu 基础镜像仅 170M，因为轻量一个宿主机可以轻松安装数百个容器。
1.2 是什么 Docker 是基于 Go 语言实现的云开源项目，从 2013 年发布到现在一直广受关注。Docker 可以让你像使用集装箱一样快速的组合成应用，并且可以像运输标准集装箱一样，尽可能的屏蔽代码层面的差异。它将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。
程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。
本文就不对比虚拟机跟 Docker 的区别和优劣了，每个文章都有，说烂了，想了解的话可以百度一下 😂，我这里就不多说了，下面直接看看怎么安装怎么用起来吧。
2. 安装 &amp; 配置 2.1 Mac 下安装 在下直接使用 Homebrew Cask 来安装，Mac 下：]]></description>
</item>
<item>
    <title>CentOS 8 开关端口</title>
    <link>http://example.org/centos-8-%E5%BC%80%E5%85%B3%E7%AB%AF%E5%8F%A3/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/centos-8-%E5%BC%80%E5%85%B3%E7%AB%AF%E5%8F%A3/</guid>
    <description><![CDATA[来源参考
查看防火墙某个端口是否开放 1 firewall-cmd --query-port=3306/tcp 开放防火墙端口3306 1 firewall-cmd --zone=public --add-port=3306/tcp --permanent 注意：开放端口后要重启防火墙生效 重启防火墙 1 systemctl restart firewalld 关闭防火墙端口 1 firewall-cmd --remove-port=3306/tcp --permanent 查看防火墙状态 1 systemctl status firewalld 关闭防火墙 1 systemctl stop firewalld 打开防火墙 1 systemctl start firewalld 开放一段端口 1 firewall-cmd --zone=public --add-port=40000-45000/tcp --permanent 查看开放的端口列表 1 firewall-cmd --zone=public --list-ports 查看被监听Listen的端口 1 netstat -lntp 检查端口被哪个进程占用 1 netstat -lnp|grep 3306 ]]></description>
</item>
<item>
    <title>CentOS挂载NTFS分区</title>
    <link>http://example.org/centos%E6%8C%82%E8%BD%BDntfs%E5%88%86%E5%8C%BA/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/centos%E6%8C%82%E8%BD%BDntfs%E5%88%86%E5%8C%BA/</guid>
    <description><![CDATA[CentOS挂载NTFS分区：https://my.oschina.net/u/4364192/blog/3326016
先安装ntfsprogs 截止到2021年4月27日，最新版仍是2017.3.23。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 下载此软件 wget http://tuxera.com/opensource/ntfs-3g_ntfsprogs-2017.3.23.tgz # 解压 tar -zxvf ntfs-3g_ntfsprogs-2017.3.23.tgz # 进入解压后的目录 cd ntfs-3g_ntfsprogs-2017.3.23/ # 建立一个目录ntfs3g用以安装当前软件 mkdir /usr/local/ntfs3g/ # 指定编译路径 ./configure --prefix=/usr/local/ntfs3g/ # 开始编译和安装 make&amp;&amp;make install 挂载NTFS分区 挂载命令格式（较非NTFS分区的挂载，其中加入了ntfs-3g参数）
1 mount -t ntfs-3g /dev/sdb1 /mnt/udisk 实现开机自动挂载 要想实现自动开机挂载NTFS格式的USB硬盘，需要进行以下操作：
1 2 3 4 5 6 7 8 # 首先备份fstab表 cp /etc/fstab /etc/fstabbakup # 然后打开vi编辑器 vi /etc/fstab # 在fstab表最后一行添加如下信息 /dev/sdb1 /mnt/udisk ntfs-3g defaults 0 0 ]]></description>
</item>
<item>
    <title>Docker 搭建Filerun</title>
    <link>http://example.org/docker-%E6%90%AD%E5%BB%BAfilerun/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/docker-%E6%90%AD%E5%BB%BAfilerun/</guid>
    <description><![CDATA[filerun 官方docker： https://hub.docker.com/r/afian/filerun/
1、预先搭建好mariadb容器 2、使用以下命令运行filerun容器
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 docker run -itd --name filerun \ --restart=unless-stopped \ --link=mariadb -e FR_DB_HOST=数据库地址 \ -e FR_DB_PORT=数据库端口 \ -e FR_DB_NAME=数据库名称（需要先自行建好，filerun初始化时不会建立） \ -e FR_DB_USER=数据库用户名 \ -e FR_DB_PASS=数据库密码 \ -e APACHE_RUN_USER=www-data \ -e APACHE_RUN_USER_ID=33 \ -e APACHE_RUN_GROUP=www-data \ -e APACHE_RUN_GROUP_ID=33 \ -p 616:80 \ -v /userdatas/Sandisk/filerun/html:/var/www/html \ -v /userdatas/Sandisk/filerun/user-files:/user-files \ afian/filerun filerun默认监听80端口， 默认使用以下两个作为数据持久化的路径：
/filerun/html:/var/www/html /filerun/user-files:/user-files 初始化的用户名密码均为：superuser]]></description>
</item>
<item>
    <title>Linux设置全局代理</title>
    <link>http://example.org/linux%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/linux%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</guid>
    <description><![CDATA[cover: 所有shell 这种情况可以修改/etc/profile、/etc/environment、、HOME/.bashrc、HOME/.zshrc配置文件，一般来说，只需要修改.bashrc或.zshrc就可以使所有的shell走代理（除非特殊情况）。
1 2 3 4 5 6 7 # set export {http,https}_proxy=&#34;http://127.0.0.1:1280&#34; # unset unset {http,https}_proxy # test curl -v checkip.dyndns.org curl --head -v www.google.com 若希望立即见效，则?source 或HOME/.zshrc?或?sourceHOME/.bashrc。
因为linux终端不支持sock5，需要使用privoxy将HTTP流量转到本地sock5代理端口
1.安装Privoxy
1 sudo apt-get install privoxy 2.配置Privoxy 修改/etc/privoxy/config文件（先清空原文件内容，再将以下内容粘贴进去）
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 user-manual /usr/share/doc/privoxy/user-manual confdir /etc/privoxy logdir /var/log/privoxy actionsfile match-all.]]></description>
</item>
<item>
    <title>Nginx负载均衡</title>
    <link>http://example.org/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid>
    <description><![CDATA[一、Nginx负载均衡 1、示意图 2、好处 均摊请求，让服务端整体吞吐率提高，满足不断增长的业务需求。
相比于单点服务，当其中一台服务器挂掉后，还可以继续让剩下的服务器继续服务，提高了容灾性。
二、负载均衡的分类 1、GSLB（全局负载均衡） 一般是以国家或省为单位进行全局负载的。
示意图如下：
2、SLB 示意图： 三、基于LVS的中间件架构 LVS（Linux Virtual Server ）Linux 虚拟服务器
1、四层负载均衡 即在OSI七层模型中的传输层。因为第四层支持TCP/IP协议。四层负载均衡只需要对客户端的请求进行TCP/IP协议的包转发就能实现负载均衡。
优势 非常快，只需要最底层进行应用处理，不需要进行一些复杂的逻辑，值需要负责包的转发即可。
示意图 2、七层负载均衡 因为是在应用层，因此可以完成很多应用方面的协议请求，比如HTTP协议的负载均衡可以实现HTTP信息的改写，头信息的改写，安全应用规则的控制，转发，rewrite等等方面的规则控制。因此在七层负载均衡里面可以做的事情就更多一些，Nginx就是一个典型的七层负载均衡的SLB。
SLB（Server Load Balancing）服务器负载均衡。
示意图 Nginx负载均衡实现原理 通过 proxy_pass 转发到后端的服务器上，只是不是转发到一台，而是一组虚拟的服务池（即 upstream server）。在upstream 组里面实现了对于多台服务器请求的不断轮询。
当用户的请求过来后，就会通过 upstream_module 这个模块将用户的请求分发到不同的服务上，从而实现负载均衡。
故 proxy_pass 和 upstream 是两个核心的配置。
示意图 配置语法 ngx_http_upstream_module官方文档 ： http://nginx.org/en/docs/http/ngx_http_upstream_module.html
1 2 3 Syntax: upstream name { ... } Default: — Context: http 示例： a、用一台服务器来实现负载均衡，配置如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 upstream chrdai { server 192.]]></description>
</item>
<item>
    <title>关于堡垒机</title>
    <link>http://example.org/%E5%85%B3%E4%BA%8E%E5%A0%A1%E5%9E%92%E6%9C%BA/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E5%85%B3%E4%BA%8E%E5%A0%A1%E5%9E%92%E6%9C%BA/</guid>
    <description><![CDATA[来源：https://github.com/perfectstorm88/bblog/issues/5#关于未来的趋势看法
索引 前言 开发环境 堡垒机 VPN 云堡垒机 关于未来的趋势看法： 参考 前言 医院、政府类项目中对安全的合规要求比较高，会把网络整得很复杂，由此给项目实施相关人员带来诸多不便，令很多人头大得很。俗话说“难者不会、会者不难”，从原理上搞清楚，解决问题就只剩操作步骤了。
本文的尝试是用通俗的语言还原安全相关的网络原理，非专业网络工程师也能看懂，比如产品经理、前后端的开发人员、测试人员、项目经理等。
开发环境 先从我们最熟悉的开发环境说起，如下图所示： {% asset_img 4124540583.png [dddd] %} 在我们自己的开发环境，为了效率考虑，作为技术的开发运维都是直接访问数据库、后端服务器、web服务器，作为访问用户的产品经理、测试人员，也是直接访问web服务器提供的服务。
堡垒机 对于一个要部署上线的系统，安全就变得很重要了，作为技术的开发运维不能再随意访问、操作数据库和服务器了。因此就引入了一个叫做堡垒机的东东，对数据库和服务器进行保护，如下图所示： {% asset_img 2053743094.png %}
堡垒机只能让你访问被授权的主机事先防范“事先防范、访问过程对你的行为进行监控事中控制事中控制、出了安全事故可以回看操作录像(事后溯源）。
堡垒机的原理也不复杂，网上有开源代码,见jumpserver，感兴趣的也可以自己部署一套玩玩。有的堡垒机需要专门的客户端软件，有的可以直接通过浏览器访问，相信未来以浏览器作为访问方式的会越来越多。 使用堡垒机访问数据库和服务器有多种协议，比如ssh协议用来访问linux系统、DRP协议用来访问windows桌面。
别看现在堡垒机很常见，但是出现的历史却很短，也才十几年的时间；技术人员比较讨论堡垒机，因为每次通过堡垒机操作太麻烦，但是企业大客户和政府事业单位的领导非常喜欢这玩意，所以要适应这个东西，以后会更常见的。
VPN 对于医院、政府类项目，生产环境都在封闭内网，之前都需要去企业现场才能干活，有个VPN之后，在家里就可以干活了。
尤其现在VPN客户端都挺好用，可以同时访问互联网和企业内网，只要网络够快、VPN服务器够好，在家里跟去企业现场没太大区别，所以技术人员还是很喜欢用VPN的。
现在很多情况下，运维/开发都不需要去客户驻场了，所以经常的应用场景如下所示：需要先连上VPN，再登陆堡垒机，然后才能通过堡垒机上的软件进行干活。 {% asset_img 2594537473.png %}
原理如上图所示，但实际上我们在干活时还会碰到很多意外： 1、比如有的企业会对VPN进行限制，把VPN的访问权限限制在一个很小的区域，所以在内网能打开的网页通过VPN就不能打开了。 2、在这种情况下，也是有方法可以解决的，就是让网管给你开放一台经过授权的windows主机，然后通过这条线去打开网页：操作者-》VPN-》堡垒机-》windows主机-》打开网页。
云堡垒机 最近随着云计算越来越普及，医院、政府类项目很多都在上云，云堡垒机也应运而生，其使用场景如下图所示，不必在通过VPN，可以直接登录堡垒机使用。 {% asset_img 189612217.png %}
关于未来的趋势看法： 堡垒机会越来越多，甚至公司内部、团队内部的一些重要数据资产，也有采用堡垒机的方式进行保护 现在堡垒机的运维客户端很多还需要安装软件，以后会越来越多地采用浏览器方式直接访问，而且云堡垒机的场景会越来越多 VPN技术单一，也比较成熟了，现在还有不少乱七八糟的客户端，会越来越少的 参考 堡垒机哲学史 堡垒机是干什么的？ 云堡垒机应用场景 堡垒机运维审计系统运维审计系统的基本原理与部署方式 VPN和防火墙有什么关系？ 什么是VPN以及VPN的工作原理是什么？新手指南（2020年） VPN保护企业内网安全？VPN了解一下 商业VPN和个人VPN有什么区别？ :]]></description>
</item>
<item>
    <title>安装配置Filebrowser</title>
    <link>http://example.org/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEfilebrowser/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEfilebrowser/</guid>
    <description><![CDATA[docker安装
1 2 3 4 5 6 7 docker run -itd \ --name=filebrowser \ # 镜像别名 -v /:/srv \ # filebrowser 管理的路径 -v /etc/filebrowser/config.json:/etc/config.json \ # filebrowser 配置 -v /etc/filebrowser/database.db:/etc/database.db \ # filebrowser 数据库 -p 80:80 \ # filebrowser 映射端口 filebrowser/filebrowser 一键安装脚本,下面的可以不用看了
1 bash &lt;(curl -s -L https://233blog.com/filebrowser.sh) 另一个详细教程文章 https://233blog.com/post/26/
第一步 1 curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash 第二步 生成初始化配置文件
1 sudo filebrowser -d /etc/filebrowser/filebrowser.db config init 第三步 修改配置文件（通过命令）
1 2 3 4 5 6 7 8 9 10 # 设置监听地址 sudo filebrowser -d /etc/filebrowser/filebrowser.]]></description>
</item>
</channel>
</rss>
