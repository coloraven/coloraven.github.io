<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>数据分析 - Tag - 我的全新 Hugo 网站</title>
        <link>http://example.org/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link>
        <description>数据分析 - Tag - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 02 Jul 2023 20:30:44 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" rel="self" type="application/rss+xml" /><item>
    <title>关联分析</title>
    <link>http://example.org/%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</link>
    <pubDate>Sun, 02 Jul 2023 20:30:44 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[树形关系分析 根据id,pid还原树形关系的完整树，找出每个树的每个节点的rootid，以便导入neo4j数据库。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 import duckdb from joblib import Parallel, delayed def find_related_ids(current_id,phone,cursor): path_ids = [current_id] id_phone_dict = {current_id:phone} def find_son_ids(current_id): # 父 ID 等于上面 ID 的 phone, 即儿子的 ID cursor.]]></description>
</item>
</channel>
</rss>
