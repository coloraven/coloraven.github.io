<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - Category - 我的全新 Hugo 网站</title>
        <link>http://example.org/categories/linux/</link>
        <description>Linux - Category - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 23 Dec 2022 15:09:19 &#43;0000</lastBuildDate><atom:link href="http://example.org/categories/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Win下利用DockerDesktop打造Linux开发环境</title>
    <link>http://example.org/win%E4%B8%8B%E5%88%A9%E7%94%A8dockerdesktop%E6%89%93%E9%80%A0linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
    <pubDate>Fri, 23 Dec 2022 15:09:19 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/win%E4%B8%8B%E5%88%A9%E7%94%A8dockerdesktop%E6%89%93%E9%80%A0linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
    <description><![CDATA[开发环境要求 基于Ubuntu或者Debian，系统源改为国内源， 系统时间为东八区 安装node、golang、python，源都改为国内源 使用ssh秘钥登录，方便vscode链接 生产目录映射到宿主机目录，防止工作数据丢失 暴露端口数至少40个，以满足折腾需求 解决中文乱码问题 符合要求的Dockerfile 参考此链接：https://blog.csdn.net/shykevin/article/details/105305322
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 FROM node:19-bullseye-slim # 修改更新源为阿里云 RUN sed -i &#34;s@http://\(deb\|security\).debian.org@http://mirrors.163.com@g&#34; /etc/apt/sources.list # ADD . / # 时区为上海 ENV TZ Asia/Shanghai # 设置时区,设置utf-8编码 RUN apt-get update &amp;&amp; apt-get install -y tzdata locales python3-pip cron openssh-server python3 curl wget git &amp;&amp; apt-get clean all &amp;&amp; \ ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone &amp;&amp; \ locale-gen en_US.]]></description>
</item>
<item>
    <title>history命令显示时间</title>
    <link>http://example.org/history%E5%91%BD%E4%BB%A4%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4/</link>
    <pubDate>Fri, 27 Aug 2021 09:18:40 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/history%E5%91%BD%E4%BB%A4%E6%98%BE%E7%A4%BA%E6%97%B6%E9%97%B4/</guid>
    <description><![CDATA[ 1 2 echo &#39;export HISTTIMEFORMAT=&#34;%F %T &#34;&#39; &gt;&gt; /etc/bashrc source /etc/bashrc ]]></description>
</item>
<item>
    <title>Ubuntu修改SSH欢迎界面</title>
    <link>http://example.org/ubuntu%E4%BF%AE%E6%94%B9ssh%E6%AC%A2%E8%BF%8E%E7%95%8C%E9%9D%A2/</link>
    <pubDate>Fri, 27 Aug 2021 09:16:35 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/ubuntu%E4%BF%AE%E6%94%B9ssh%E6%AC%A2%E8%BF%8E%E7%95%8C%E9%9D%A2/</guid>
    <description><![CDATA[Ubuntu 与别的 Linux 不同，直接修改/etc/motd文件重登录后无效。因为这里 /etc/motd 是一个符号链接，指向 /var/run/motd，应该是一个启动后在生成的文件。在版本 10.04 中，找到生成的脚本在目录 /etc/update-motd.d/ 中，那几个有序号的文件就是，包括 00-header，20-cpu-checker ，90-updates-available， 98-reboot-required，10-help-text，50-landscape-sysinfo，91-release- upgrade，99-footer。修改这几个文件，可以得到自己想要的结果。我使用的是 Ubuntu 12.04 Server LTS，目录下有这几个文件：
00-header 10-help-text 50-landscape-sysinfo 90-updates-available 91-release-upgrade 98-fsck-at-reboot 98-reboot-required 99-footer
基于我的需求，我修改到了以下几个文件：
00-header 50-landscape-sysinfo 90-updates-available
例如显示系统相关信息：
1 2 3 4 System load: 0.0 Processes: 75 Usage of /: 2.7% of 73.47GB Users logged in: 2 Memory usage: 48% IP address for eth0: 61.166.76.27 Swap usage: 0% 此信息就是文件 “50-landscape-sysinfo” 里面的如下语句控制的：/usr/bin/landscape-sysinfo在前面用 “#” 号将其注释，保存即可。修改后用sudo run-parts /etc/update-motd.d去执行就会立即见到效果，而不用反复注销登录。]]></description>
</item>
<item>
    <title>CentOS 8 开关端口</title>
    <link>http://example.org/centos-8-%E5%BC%80%E5%85%B3%E7%AB%AF%E5%8F%A3/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/centos-8-%E5%BC%80%E5%85%B3%E7%AB%AF%E5%8F%A3/</guid>
    <description><![CDATA[来源参考
查看防火墙某个端口是否开放 1 firewall-cmd --query-port=3306/tcp 开放防火墙端口3306 1 firewall-cmd --zone=public --add-port=3306/tcp --permanent 注意：开放端口后要重启防火墙生效 重启防火墙 1 systemctl restart firewalld 关闭防火墙端口 1 firewall-cmd --remove-port=3306/tcp --permanent 查看防火墙状态 1 systemctl status firewalld 关闭防火墙 1 systemctl stop firewalld 打开防火墙 1 systemctl start firewalld 开放一段端口 1 firewall-cmd --zone=public --add-port=40000-45000/tcp --permanent 查看开放的端口列表 1 firewall-cmd --zone=public --list-ports 查看被监听Listen的端口 1 netstat -lntp 检查端口被哪个进程占用 1 netstat -lnp|grep 3306 ]]></description>
</item>
<item>
    <title>CentOS挂载NTFS分区</title>
    <link>http://example.org/centos%E6%8C%82%E8%BD%BDntfs%E5%88%86%E5%8C%BA/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/centos%E6%8C%82%E8%BD%BDntfs%E5%88%86%E5%8C%BA/</guid>
    <description><![CDATA[CentOS挂载NTFS分区：https://my.oschina.net/u/4364192/blog/3326016
先安装ntfsprogs 截止到2021年4月27日，最新版仍是2017.3.23。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 下载此软件 wget http://tuxera.com/opensource/ntfs-3g_ntfsprogs-2017.3.23.tgz # 解压 tar -zxvf ntfs-3g_ntfsprogs-2017.3.23.tgz # 进入解压后的目录 cd ntfs-3g_ntfsprogs-2017.3.23/ # 建立一个目录ntfs3g用以安装当前软件 mkdir /usr/local/ntfs3g/ # 指定编译路径 ./configure --prefix=/usr/local/ntfs3g/ # 开始编译和安装 make&amp;&amp;make install 挂载NTFS分区 挂载命令格式（较非NTFS分区的挂载，其中加入了ntfs-3g参数）
1 mount -t ntfs-3g /dev/sdb1 /mnt/udisk 实现开机自动挂载 要想实现自动开机挂载NTFS格式的USB硬盘，需要进行以下操作：
1 2 3 4 5 6 7 8 # 首先备份fstab表 cp /etc/fstab /etc/fstabbakup # 然后打开vi编辑器 vi /etc/fstab # 在fstab表最后一行添加如下信息 /dev/sdb1 /mnt/udisk ntfs-3g defaults 0 0 ]]></description>
</item>
<item>
    <title>ssh自动登陆的实现</title>
    <link>http://example.org/ssh%E8%87%AA%E5%8A%A8%E7%99%BB%E9%99%86%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/ssh%E8%87%AA%E5%8A%A8%E7%99%BB%E9%99%86%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[Linux系统shell脚本实现： https://www.cnblogs.com/zhenbianshu/p/5867440.html
需要先安装expect https://blog.csdn.net/wangtaoking1/article/details/78268574
Python脚本实现： https://mp.weixin.qq.com/s/vwmAa3kDc1zYdyTE18aA5w]]></description>
</item>
<item>
    <title>ssh防爆破</title>
    <link>http://example.org/ssh%E9%98%B2%E7%88%86%E7%A0%B4/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/ssh%E9%98%B2%E7%88%86%E7%A0%B4/</guid>
    <description><![CDATA[来源：https://github.com/FunctionClub/Fail2ban
原理 Fail2ban会通过检查日志来匹配错误信息，从而使用iptables来防止暴力破解。理论上只要是能够在服务器本地输出错误日志和访问日志的程序都可以使用Fail2ban来保驾护航。
脚本介绍 一键安装部署Fail2ban，自动配置防SSH爆破。可自定义ip封禁时间，最高重试次数。
安装 1 wget https://raw.githubusercontent.com/FunctionClub/Fail2ban/master/fail2ban.sh &amp;&amp; bash fail2ban.sh 2&gt;&amp;1 | tee fail2ban.log 卸载 1 wget https://raw.githubusercontent.com/FunctionClub/Fail2ban/master/uninstall.sh &amp;&amp; bash uninstall.sh 脚本运行截图 ]]></description>
</item>
<item>
    <title>关于堡垒机</title>
    <link>http://example.org/%E5%85%B3%E4%BA%8E%E5%A0%A1%E5%9E%92%E6%9C%BA/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E5%85%B3%E4%BA%8E%E5%A0%A1%E5%9E%92%E6%9C%BA/</guid>
    <description><![CDATA[来源：https://github.com/perfectstorm88/bblog/issues/5#关于未来的趋势看法
索引 前言 开发环境 堡垒机 VPN 云堡垒机 关于未来的趋势看法： 参考 前言 医院、政府类项目中对安全的合规要求比较高，会把网络整得很复杂，由此给项目实施相关人员带来诸多不便，令很多人头大得很。俗话说“难者不会、会者不难”，从原理上搞清楚，解决问题就只剩操作步骤了。
本文的尝试是用通俗的语言还原安全相关的网络原理，非专业网络工程师也能看懂，比如产品经理、前后端的开发人员、测试人员、项目经理等。
开发环境 先从我们最熟悉的开发环境说起，如下图所示： {% asset_img 4124540583.png [dddd] %} 在我们自己的开发环境，为了效率考虑，作为技术的开发运维都是直接访问数据库、后端服务器、web服务器，作为访问用户的产品经理、测试人员，也是直接访问web服务器提供的服务。
堡垒机 对于一个要部署上线的系统，安全就变得很重要了，作为技术的开发运维不能再随意访问、操作数据库和服务器了。因此就引入了一个叫做堡垒机的东东，对数据库和服务器进行保护，如下图所示： {% asset_img 2053743094.png %}
堡垒机只能让你访问被授权的主机事先防范“事先防范、访问过程对你的行为进行监控事中控制事中控制、出了安全事故可以回看操作录像(事后溯源）。
堡垒机的原理也不复杂，网上有开源代码,见jumpserver，感兴趣的也可以自己部署一套玩玩。有的堡垒机需要专门的客户端软件，有的可以直接通过浏览器访问，相信未来以浏览器作为访问方式的会越来越多。 使用堡垒机访问数据库和服务器有多种协议，比如ssh协议用来访问linux系统、DRP协议用来访问windows桌面。
别看现在堡垒机很常见，但是出现的历史却很短，也才十几年的时间；技术人员比较讨论堡垒机，因为每次通过堡垒机操作太麻烦，但是企业大客户和政府事业单位的领导非常喜欢这玩意，所以要适应这个东西，以后会更常见的。
VPN 对于医院、政府类项目，生产环境都在封闭内网，之前都需要去企业现场才能干活，有个VPN之后，在家里就可以干活了。
尤其现在VPN客户端都挺好用，可以同时访问互联网和企业内网，只要网络够快、VPN服务器够好，在家里跟去企业现场没太大区别，所以技术人员还是很喜欢用VPN的。
现在很多情况下，运维/开发都不需要去客户驻场了，所以经常的应用场景如下所示：需要先连上VPN，再登陆堡垒机，然后才能通过堡垒机上的软件进行干活。 {% asset_img 2594537473.png %}
原理如上图所示，但实际上我们在干活时还会碰到很多意外： 1、比如有的企业会对VPN进行限制，把VPN的访问权限限制在一个很小的区域，所以在内网能打开的网页通过VPN就不能打开了。 2、在这种情况下，也是有方法可以解决的，就是让网管给你开放一台经过授权的windows主机，然后通过这条线去打开网页：操作者-》VPN-》堡垒机-》windows主机-》打开网页。
云堡垒机 最近随着云计算越来越普及，医院、政府类项目很多都在上云，云堡垒机也应运而生，其使用场景如下图所示，不必在通过VPN，可以直接登录堡垒机使用。 {% asset_img 189612217.png %}
关于未来的趋势看法： 堡垒机会越来越多，甚至公司内部、团队内部的一些重要数据资产，也有采用堡垒机的方式进行保护 现在堡垒机的运维客户端很多还需要安装软件，以后会越来越多地采用浏览器方式直接访问，而且云堡垒机的场景会越来越多 VPN技术单一，也比较成熟了，现在还有不少乱七八糟的客户端，会越来越少的 参考 堡垒机哲学史 堡垒机是干什么的？ 云堡垒机应用场景 堡垒机运维审计系统运维审计系统的基本原理与部署方式 VPN和防火墙有什么关系？ 什么是VPN以及VPN的工作原理是什么？新手指南（2020年） VPN保护企业内网安全？VPN了解一下 商业VPN和个人VPN有什么区别？ :]]></description>
</item>
<item>
    <title>将CentOS、RHEL 7/8引导到紧急模式（Emergency mode）/恢复模式（Recovery mode）</title>
    <link>http://example.org/%E5%B0%86centos-78rhel-78%E5%BC%95%E5%AF%BC%E5%88%B0%E7%B4%A7%E6%80%A5%E6%A8%A1%E5%BC%8F%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%96%B9%E6%B3%95/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E5%B0%86centos-78rhel-78%E5%BC%95%E5%AF%BC%E5%88%B0%E7%B4%A7%E6%80%A5%E6%A8%A1%E5%BC%8F%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[作为Linux管理员，您可能需要对某些实例进行故障排除和修复引导问题，这通常是通过从Grub菜单将系统引导到紧急模式（Emergency mode）/恢复模式（Recovery mode）来实现的。在本文中，您将学习诊断问题并从紧急模式恢复系统。
将CentOS、RHEL 7/8引导到紧急模式（Emergency mode）/恢复模式（Recovery mode）
启动您的CentOS 7/8、RHEL 7/8 Linux机器，当出现引导加载程序菜单时，请按Enter键以外的任何键以中断倒计时：
按e键编辑当前条目，以便我们可以修改默认的引导加载程序条目并登录到紧急模式：
现在，使用光标键导航到以linux开头的行，您需要将systemd.unit=emergency.target添加到行尾，如上图方框所示。
按Ctrl+x键以使用修改后的配置启动。
输入root密码登录到紧急模式（Emergency mode）：
使用mount命令重新安装对/文件系统的读/写操作，这将使您能够编辑文件系统：
# mount -o remount,rw /
参考：mount命令_Linux mount命令使用详解：用于加载文件系统到指定的加载点。
这时，您应该能够从紧急模式中拯救出故障的系统。]]></description>
</item>
<item>
    <title>服务在“内网”，nginx记录用户源IP和源端口</title>
    <link>http://example.org/%E6%9C%8D%E5%8A%A1%E5%9C%A8%E5%86%85%E7%BD%91nginx%E8%AE%B0%E5%BD%95%E7%94%A8%E6%88%B7%E6%BA%90ip%E5%92%8C%E6%BA%90%E7%AB%AF%E5%8F%A3/</link>
    <pubDate>Sat, 14 Aug 2021 15:42:45 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E6%9C%8D%E5%8A%A1%E5%9C%A8%E5%86%85%E7%BD%91nginx%E8%AE%B0%E5%BD%95%E7%94%A8%E6%88%B7%E6%BA%90ip%E5%92%8C%E6%BA%90%E7%AB%AF%E5%8F%A3/</guid>
    <description><![CDATA[转载自https://www.cnblogs.com/linuxk/p/12033796.html
服务器架构前面加了防火墙，Nginx如何获取客户端真实ip？？？ 在大部分实际业务场景中，网站访问请求并不是简单地从用户（访问者）的浏览器直达网站的源站服务器，中间可能经过所部署的CDN、高防IP、WAF等代理服务器。例如，网站可能采用这样的部署架构：用户 &gt; CDN/高防IP/WAF &gt; 源站服务器。这种情况下，访问请求在经过多层加速或代理转发后，源站服务器该如何获取发起请求的真实客户端IP？
一般情况下，透明的代理服务器在将用户的访问请求转发到下一环节的服务器时，会在HTTP的请求头中添加一条X-Forwarded-For记录，用于记录用户的真实IP，其记录格式为X-Forwarded-For:用户IP。如果期间经历多个代理服务器，则X-Forwarded-For将以该格式记录用户真实IP和所经过的代理服务器IP：X-Forwarded-For:用户IP, 代理服务器1-IP, 代理服务器2-IP, 代理服务器3-IP, ……。
因此，常见的Web应用服务器可以使用X-Forwarded-For的方式获取访问者真实IP。
Nginx配置方案
1、确认nginx安装时已经安装http_realip_module模块 为实现负载均衡，Nginx使用http_realip_module模块来获取真实IP。# nginx -V | grep http_realip_module命令查看是否已安装该模块。如未安装，则需要重新编译Nginx服务并加装该模块。方法如下：
1 2 3 4 5 6 7 8 wget http://nginx.org/download/nginx-1.14.2.tar.gz tar zxvf nginx-1.14.2.tar.gz cd nginx-1.14.2 ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_stub_status_module --without-http-cache --with-http_ssl_module --with-http_realip_module make make install kill -USR2 `cat /usr/local/nginx/logs/nginx.pid` kill -QUIT `cat /usr/local/nginx/logs/ nginx.pid.oldbin` 2、修改Nginx对应server的配置 打开www.conf配置文件，在location / {} 中加入以下内容：
1 2 3 4 5 6 set_real_ip_from ip_range1; #真实服务器上一级代理的IP地址或者IP段,可以写多行 set_real_ip_from ip_range2; .]]></description>
</item>
</channel>
</rss>
