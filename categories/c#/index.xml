<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C# - Category - 我的全新 Hugo 网站</title>
        <link>http://example.org/categories/c#/</link>
        <description>C# - Category - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 17 Aug 2021 05:19:11 &#43;0000</lastBuildDate><atom:link href="http://example.org/categories/c#/" rel="self" type="application/rss+xml" /><item>
    <title>使用CSharp带参数调用外部EXE</title>
    <link>http://example.org/%E4%BD%BF%E7%94%A8csharp%E5%B8%A6%E5%8F%82%E6%95%B0%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8exe/</link>
    <pubDate>Tue, 17 Aug 2021 05:19:11 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E4%BD%BF%E7%94%A8csharp%E5%B8%A6%E5%8F%82%E6%95%B0%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8exe/</guid>
    <description><![CDATA[1.问题意义 据说界面程序开发,首选C#(像lebview之类的也很好) 但是,**能不能用其他语言开发核心代码,只用C#做界面?**毕竟每种语言都有自己擅长的领域.
2.exe程序 比如有个example.exe,能接受4个参数.用cmd的调用方法是
1 example.exe &#34;1&#34; &#34;a&#34; &#34;2&#34; &#34;3&#34; 3.C#调用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // 调用exe的函数 using System.Diagnostics; public bool StartProcess(string runFilePath, params string[] args) { string s = &#34;&#34;; foreach (string arg in args) { s = s + arg + &#34; &#34;; } s = s.Trim(); Process process = new Process();//创建进程对象 ProcessStartInfo startInfo = new ProcessStartInfo(runFilePath, s); // 括号里是(程序名,参数) process.]]></description>
</item>
<item>
    <title>CSharp解析读取JSON</title>
    <link>http://example.org/csharp%E8%A7%A3%E6%9E%90%E8%AF%BB%E5%8F%96json/</link>
    <pubDate>Mon, 16 Aug 2021 19:21:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/csharp%E8%A7%A3%E6%9E%90%E8%AF%BB%E5%8F%96json/</guid>
    <description><![CDATA[https://blog.csdn.net/dslobo/article/details/108815969
要读取的json文件内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { &#34;accepttime&#34;: 1600966807, &#34;certificate&#34;: &#34;&#34;, &#34;completetext&#34;: &#34;&#34;, &#34;completetime&#34;: 1601010419, &#34;createtime&#34;: 1600966807, &#34;deleteflag&#34;: 0, &#34;endtimestr&#34;: &#34;12:00&#34;, &#34;gid&#34;: 42, &#34;netbarCameraList&#34;: [{ &#34;account&#34;: &#34;admin&#34;, &#34;address&#34;: &#34;172.16.36.17&#34;, &#34;cameraid&#34;: 21, &#34;gid&#34;: 42, &#34;name&#34;: &#34;36&#34;, &#34;password&#34;: &#34;52358&#34;, &#34;port&#34;: 554 }], &#34;netbarname&#34;: &#34;36新亚网吧&#34;, &#34;uniacid&#34;: 6, &#34;userid&#34;: 66 } 使用到的关键库 1 2 using Newtonsoft.Json; using Newtonsoft.]]></description>
</item>
<item>
    <title>CSharp from select语法实例</title>
    <link>http://example.org/csharp%E4%B8%ADfrom-select%E8%AF%AD%E6%B3%95%E5%AE%9E%E4%BE%8B/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/csharp%E4%B8%ADfrom-select%E8%AF%AD%E6%B3%95%E5%AE%9E%E4%BE%8B/</guid>
    <description><![CDATA[https://bbs.csdn.net/topics/392903084
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 private void button1_Click(object sender, EventArgs e) { string json = &#34;[{\&#34;Groupid\&#34;: \&#34;1\&#34;,\&#34;groupnum\&#34;: \&#34;9005\&#34;,\&#34;groupname\&#34;: \&#34;调度中心\&#34;,\&#34;type\&#34;: \&#34;1\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;0\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: [{\&#34;Groupid\&#34;: \&#34;54\&#34;,\&#34;groupnum\&#34;: \&#34;66000\&#34;,\&#34;groupname\&#34;: \&#34;大唐移动\&#34;,\&#34;type\&#34;: \&#34;0\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: [{\&#34;Groupid\&#34;: \&#34;55\&#34;,\&#34;groupnum\&#34;: \&#34;67000\&#34;,\&#34;groupname\&#34;: \&#34;大唐移动1\&#34;,\&#34;type\&#34;: \&#34;1\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: []}] },{\&#34;Groupid\&#34;: \&#34;66\&#34;,\&#34;groupnum\&#34;: \&#34;66000\&#34;,\&#34;groupname\&#34;: \&#34;大唐联通\&#34;,\&#34;type\&#34;: \&#34;0\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: [{\&#34;Groupid\&#34;: \&#34;67\&#34;,\&#34;groupnum\&#34;: \&#34;67000\&#34;,\&#34;groupname\&#34;: \&#34;大唐联通1\&#34;,\&#34;type\&#34;: \&#34;1\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: []}] }]},{\&#34;Groupid\&#34;: \&#34;1\&#34;,\&#34;groupnum\&#34;: \&#34;9005\&#34;,\&#34;groupname\&#34;: \&#34;调度中心\&#34;,\&#34;type\&#34;: \&#34;1\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;0\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: [{\&#34;Groupid\&#34;: \&#34;54\&#34;,\&#34;groupnum\&#34;: \&#34;66000\&#34;,\&#34;groupname\&#34;: \&#34;大唐移动\&#34;,\&#34;type\&#34;: \&#34;0\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: [{\&#34;Groupid\&#34;: \&#34;55\&#34;,\&#34;groupnum\&#34;: \&#34;67000\&#34;,\&#34;groupname\&#34;: \&#34;大唐移动1\&#34;,\&#34;type\&#34;: \&#34;1\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: []}] },{\&#34;Groupid\&#34;: \&#34;66\&#34;,\&#34;groupnum\&#34;: \&#34;66000\&#34;,\&#34;groupname\&#34;: \&#34;大唐联通\&#34;,\&#34;type\&#34;: \&#34;0\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: [{\&#34;Groupid\&#34;: \&#34;67\&#34;,\&#34;groupnum\&#34;: \&#34;67000\&#34;,\&#34;groupname\&#34;: \&#34;大唐联通1\&#34;,\&#34;type\&#34;: \&#34;1\&#34;,\&#34;dnsprefix\&#34;: \&#34;\&#34;,\&#34;islocal\&#34;: \&#34;1\&#34;,\&#34;canshowall\&#34;: \&#34;1\&#34;,\&#34;user\&#34;: [],\&#34;group\&#34;: []}] }]}]&#34;; TreeNode nodes = new TreeNode(&#34;自定义总节点名称&#34;); AddChild(nodes, json,&#34;groupname&#34;,&#34;group&#34;);//groupname替换成你的consult_mold_name，group替换成你的son就行了 treeView1.]]></description>
</item>
<item>
    <title>CSharp中TreeView绑定JSON数据</title>
    <link>http://example.org/csharp%E4%B8%ADtreeview%E7%BB%91%E5%AE%9Ajson%E6%95%B0%E6%8D%AE/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/csharp%E4%B8%ADtreeview%E7%BB%91%E5%AE%9Ajson%E6%95%B0%E6%8D%AE/</guid>
    <description><![CDATA[JSON数据
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { &#34;accepttime&#34;: 1600966807, &#34;certificate&#34;: &#34;&#34;, &#34;completetext&#34;: &#34;&#34;, &#34;completetime&#34;: 1601010419, &#34;createtime&#34;: 1600966807, &#34;deleteflag&#34;: 0, &#34;endtimestr&#34;: &#34;12:00&#34;, &#34;gid&#34;: 42, &#34;netbarCameraList&#34;: [{ &#34;account&#34;: &#34;admin&#34;, &#34;address&#34;: &#34;172.16.36.17&#34;, &#34;cameraid&#34;: 21, &#34;gid&#34;: 42, &#34;name&#34;: &#34;36&#34;, &#34;password&#34;: &#34;52358&#34;, &#34;port&#34;: 554 }], &#34;netbarname&#34;: &#34;长沙&#34;, &#34;uniacid&#34;: 6, &#34;userid&#34;: 66 } 代码：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 /// &lt;summary&gt; /// 绑定树形控件 /// &lt;/summary&gt; /// &lt;param name=&#34;treeView&#34;&gt;&lt;/param&gt; /// &lt;param name=&#34;strJson&#34;&gt;&lt;/param&gt; public void BindTreeView(TreeView treeView, string strJson) { treeView.]]></description>
</item>
<item>
    <title>CSharp网络请求</title>
    <link>http://example.org/csharp%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/csharp%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid>
    <description><![CDATA[已测试成功的 使用到的库using System.Net.Http;
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 static void Main(string[] args) { using var client = new HttpClient(); client.BaseAddress = new Uri(&#34;http://restapi.amap.com&#34;); //client.DefaultRequestHeaders.Add(&#34;User-Agent&#34;, &#34;C# console program&#34;); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(&#34;application/json&#34;)); var url = &#34;/v3/geocode/geo?key=5d47448e3c3aceff5db10319829c5450&amp;address=长沙市芙蓉区解放西路长沙市公安局&amp;city=changsha&#34;; HttpResponseMessage response = await client.GetAsync(url); response.EnsureSuccessStatusCode(); var resp = await response.Content.ReadAsStringAsync(); //将json字符串解析为json对象 JObject jobj = (JObject)JsonConvert.DeserializeObject(resp); //访问json对象中的成员 string name2 = jobj[&#34;geocodes&#34;][0][&#34;location&#34;].ToString(); Console.WriteLine(name2); Console.ReadKey(); } 异步：https://blog.csdn.net/zzulishulei/article/details/77751436]]></description>
</item>
</channel>
</rss>
