<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>逆向 - Category - 我的全新 Hugo 网站</title>
        <link>http://example.org/categories/%E9%80%86%E5%90%91/</link>
        <description>逆向 - Category - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 22 Nov 2021 19:56:25 &#43;0000</lastBuildDate><atom:link href="http://example.org/categories/%E9%80%86%E5%90%91/" rel="self" type="application/rss+xml" /><item>
    <title>撸飞鸟加速器</title>
    <link>http://example.org/%E6%92%B8%E9%A3%9E%E9%B8%9F%E5%8A%A0%E9%80%9F%E5%99%A8/</link>
    <pubDate>Mon, 22 Nov 2021 19:56:25 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E6%92%B8%E9%A3%9E%E9%B8%9F%E5%8A%A0%E9%80%9F%E5%99%A8/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 import requests,random,time def register(): deviceid = &#39;&#39;.]]></description>
</item>
<item>
    <title>搭建Android 7.0&#43;下的HTTPS抓包环境</title>
    <link>http://example.org/%E6%90%AD%E5%BB%BAandroid-7.0-%E4%B8%8B%E7%9A%84https%E6%8A%93%E5%8C%85%E7%8E%AF%E5%A2%83/</link>
    <pubDate>Thu, 28 Oct 2021 10:39:03 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E6%90%AD%E5%BB%BAandroid-7.0-%E4%B8%8B%E7%9A%84https%E6%8A%93%E5%8C%85%E7%8E%AF%E5%A2%83/</guid>
    <description><![CDATA[转载自：https://blog.csdn.net/djzhao627/article/details/108658332
准备 一台已root的手机 安装Openssl 下载地址：https://slproweb.com/products/Win32OpenSSL.html 安装完毕后将openssl.exe所在目录放入环境变量中，否则下面的openssl指令前需要加绝对路径。
证书生成 将Filddler或者其他抓包程序的证书导出，一般为xxx.cer或者xxx.pem 使用openssl的x509指令进行cer证书转pem证书 和 用md5方式显示pem证书的hash值 证书转换，已经是pem格式的证书不需要执行这一步 1 openssl x509 -inform DER -in xxx.cer -out cacert.pem 获取证书MD5的hash显示 查看openssl版本的指令openssl version #openssl版本在1.0以上的版本的执行这一句 openssl x509 -inform PEM -subject_hash_old -in cacert.pem
#openssl版本在1.0以下的版本的执行这一句 openssl x509 -inform PEM -subject_hash -in cacert.pem
将第二条指令输出的类似347bacb5的值进行复制
将pem证书重命名 使用上面复制的值（类似于347bacb5）对pem证书进行重命名
1 mv cacert.pem 347bacb5.0 将新证书放入手机系统证书目录并设置权限 手机系统目录位置是： /system/etc/security/cacerts
需要拷贝至此目录必须拥有root权限 修改证书的权限为644，可查看同目录下其他证书权限，照抄设置
重启Android设备以生效 拷贝证书至/system/etc/security/cacerts之后，重启手机就可以使证书生效了]]></description>
</item>
<item>
    <title>紫狐分身PJ过程</title>
    <link>http://example.org/%E7%B4%AB%E7%8B%90%E5%88%86%E8%BA%ABpj%E8%BF%87%E7%A8%8B/</link>
    <pubDate>Sat, 25 Sep 2021 17:34:02 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E7%B4%AB%E7%8B%90%E5%88%86%E8%BA%ABpj%E8%BF%87%E7%A8%8B/</guid>
    <description><![CDATA[原始可用APK已备份
类名： com.cloudinject.feature.App
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public void attachBaseContext(Context context) { try { StringBuilder sb = new StringBuilder(); sb.append(&#34;JkmuyJoL&#34;); File file = new File(context.getFilesDir(), &#34;decode&#34;); if (!file.mkdirs()) { sb.append(&#34;.&#34;); } else { file.delete(); } if (f9216 == null || IV == null || key == null) { f9216 = new DESKeySpec(sb.toString().getBytes(&#34;UTF-8&#34;)); key = SecretKeyFactory.]]></description>
</item>
<item>
    <title>火牛（紫狐）分身破解过程</title>
    <link>http://example.org/%E7%81%AB%E7%89%9B%E5%88%86%E8%BA%AB%E7%A0%B4%E8%A7%A3%E8%BF%87%E7%A8%8B/</link>
    <pubDate>Sat, 18 Sep 2021 22:48:49 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/%E7%81%AB%E7%89%9B%E5%88%86%E8%BA%AB%E7%A0%B4%E8%A7%A3%E8%BF%87%E7%A8%8B/</guid>
    <description><![CDATA[紫狐分身概述 打开APP需要卡密验证，绕过卡密验证只需要劫持改包即可，具体见：火牛-紫狐分身的字符串加密-卡密验证环节破解。 正常卡密验证返回包为：{&quot;result&quot;:{&quot;msg&quot;:&quot;验证成功，卡密有效期至：2030-11-13 00:22:24&quot;},&quot;ts&quot;:1634142164901,&quot;status&quot;:1} 分身时会验证卡密是否曾经注册过，注册过则可以正常使用，否则不能正常使用，重点是：即时卡密过期也能正常使用。
第一步：卡密破解 抓包（过程略） 打开APP，随便输入一个卡密（随便几位数字），抓包查看请求和返回数据。
请求详情 卡密验证API为http://jyfya.top/Auth/Verify
返回详情 返回数据为：
1 {&#34;code&#34;:404,&#34;&#34;msg&#34;:&#34;\u6ce8\u518c\u7801\u4e0d\u5b58\u5728&#34;,&#34;data&#34;:[]} 尝试将此处的404改为200，竟然成功。
破解 1、绕过卡密验证过程 搜索&quot;is_verify&quot; 在smali码里找到第45行，将const/4 v0,0x0改为const/4 v0,0x1 {height=&ldquo;585px&rdquo; width=&ldquo;270px&rdquo;} 这样打开APP就不会再有提示输入卡密的界面。 但是&hellip;..因为正常情况下，输入卡密，服务器验证成功后，会将卡密本地保存，以待后续使用APP时调用，如此直接绕过卡密验证过程，本地的卡密信息为空，在调用时会出错，导致添加分身后，进入分身配置界面时提示当前连接不到服务器，请稍后重试。APP无法继续使用。
2、去除当前连接不到服务器，请稍后重试弹窗 抓包发现跳这个弹窗前，APP发起了一个请求（http://hw.jyfya.top:8080/v4/now/?nonce=cloneuser&amp;token=&amp;appversioncode=312&amp;virtual_id=91d7ea36fee5bd281fd2a088810e8d20），目的不明，该请求的状态码是200，按理说应该不会弹当前连接不到服务器，请稍后重试，毕竟该请求是通的，但是响应体是空白的，估计是因为这个才导致弹窗的，但是没有正版卡密的情况下，不知道其正常的响应体长怎么样。
意外 在不停折腾过程中，某次偶然情况，我在卡密输入框里输入的中文，然后篡改卡密验证时的响应数据，结果在打开分身应用时竟然不再弹窗，再查看请求过程，发现响应体竟然有数据。 {height=&ldquo;585px&rdquo; width=&ldquo;270px&rdquo;} 至此，拿到了正常的响应体数据。
暴力去弹窗（备用） 根据弹窗当前连接不到服务器，请稍后重试中的关键字，全局代码搜索无果，搜索Arsc资源得到ID7f1100b3，以该ID在全局代码中搜索发现弹窗的逻辑。 {height=&ldquo;585px&rdquo; width=&ldquo;270px&rdquo;} 在smali码中将该方法删掉~~，再验证，发现不再弹窗了。
虚拟定位破解 经过第1、2步破解后，可以正常进入分身应用设置界面了。 但是又遇到新的问题： 在`位置保护`里选点虚拟位置后点击右下角`选择`时报错 {height=&ldquo;585px&rdquo; width=&ldquo;270px&rdquo;} 抓包发现点击右下角`选择`时，后台请求 {height=&ldquo;585px&rdquo; width=&ldquo;270px&rdquo;} 返回数据 {height=&ldquo;585px&rdquo; width=&ldquo;270px&rdquo;} 明显是服务器报错了，估计是因为token（即卡密）为中文导致的，后来尝试换成数字卡密还是会报错Null is not a valid element。
突破 意外情况曾经拿到了虚拟定位正常返回数据
1 {&#34;message&#34;:&#34;success&#34;,&#34;code&#34;:200,&#34;data&#34;:&#34;qv36S6TQFKpL4tieu90GS58wzdnSVR8/Qwkmcta8G7J/3KEIJNjmSR/2TBm/suMc&#34;} data值为使用AES-ECB-PK5加密的数据，data值解开后为形如以下结构的字符串(注意为字符串)：
1 [{&#34;lat&#34;:28.294743,&#34;lon&#34;:112.896041}] +++success 抓包情况 ;;;id3 请求信息 请求方式：GET 请求URL：http://hw.jyfya.top:8080/v4/dbcell/?lat=28.288195462671396&amp;lon=112.9000414965204&amp;n=10&amp;mnc=1&amp;range=2&amp;gps=1&amp;incoord=bd09&amp;coord=bd09&amp;nonce=cloneuser&amp;token=6699666&amp;appversioncode=312&amp;virtual_id=91d7ea36fee5bd281fd2a088810e8d20 ;;; ;;;id3 请求头 User-Token: e3158c8b9687b4ca317b813431987b6c X-Mgs-Proxy-Signature: 53efd12b437a15b7e85d55441127ea8e X-UT-DID: HUAWEI_TAS-AN00|YUgEKXp38YEDAH5sndk4SKff X-CHANNEL: null User-Agant: B0a9ReUQDyrrqIRVHAMmXMQBYKbLssglkMXKUlEMd0szCaG0tpuZJv+bskFyD6Uh9T3Y7qpyiYaCkf7pyDemg== Host: hw.]]></description>
</item>
</channel>
</rss>
