<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Aardio - Category - 我的全新 Hugo 网站</title>
        <link>http://example.org/categories/aardio/</link>
        <description>Aardio - Category - 我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 28 Oct 2021 17:06:54 &#43;0000</lastBuildDate><atom:link href="http://example.org/categories/aardio/" rel="self" type="application/rss+xml" /><item>
    <title>Aardio语言中带参数调用第三方程序，并隐藏窗口</title>
    <link>http://example.org/aardio%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%B8%A6%E5%8F%82%E6%95%B0%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E7%A8%8B%E5%BA%8F%E5%B9%B6%E9%9A%90%E8%97%8F%E7%AA%97%E5%8F%A3/</link>
    <pubDate>Thu, 28 Oct 2021 17:06:54 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/aardio%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%B8%A6%E5%8F%82%E6%95%B0%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E7%A8%8B%E5%BA%8F%E5%B9%B6%E9%9A%90%E8%97%8F%E7%AA%97%E5%8F%A3/</guid>
    <description><![CDATA[官方文档参考： https://www.kancloud.cn/ymk18/aau/130355 https://www.kancloud.cn/ymk18/aau/130327]]></description>
</item>
<item>
    <title>Aardio语言中进行网络请求</title>
    <link>http://example.org/aardio%E8%AF%AD%E8%A8%80%E4%B8%AD%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link>
    <pubDate>Thu, 28 Oct 2021 14:40:03 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/aardio%E8%AF%AD%E8%A8%80%E4%B8%AD%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import console; import web.rest.jsonLiteClient; import web.json; var restClient = web.rest.jsonLiteClient(); /* web.rest客户端对象所以执行HTTP请求的函数遵守以下规则： 如果成功，则第一个返回值jsonData为服务端返回数据解码并创建的aardio对象。 在HTTP请求遇到错误时，第一个返回值jsonData为空，第二个返回值errMsg为错误信息,返回值errCode为错误代码 一般我们可以省略errMsg，errCode这两个返回值不用写，直接判断返回值是否为空即可。 */ restClient.addHeaders = { [&#34;Test&#34;] = &#34;test&#34; } var jsonData,errMsg,errCode = restClient.post(&#34;http://eu.httpbin.org/post&#34;,{ 用户名 = &#34;用户名&#34;; 密码 = &#34;密码&#34;; } ) //jsonData非空为请求成功 if( jsonData ){ console.]]></description>
</item>
<item>
    <title>Aardio语言中进行AES算法加解密</title>
    <link>http://example.org/aardio%E8%AF%AD%E8%A8%80%E4%B8%AD%E8%BF%9B%E8%A1%8Caes%E7%AE%97%E6%B3%95%E5%8A%A0%E8%A7%A3%E5%AF%86/</link>
    <pubDate>Thu, 28 Oct 2021 14:21:27 &#43;0000</pubDate>
    <author>五彩斑斓的黑</author>
    <guid>http://example.org/aardio%E8%AF%AD%E8%A8%80%E4%B8%AD%E8%BF%9B%E8%A1%8Caes%E7%AE%97%E6%B3%95%E5%8A%A0%E8%A7%A3%E5%AF%86/</guid>
    <description><![CDATA[ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import console; import crypt.bin; import crypt.aes; //创建AES加密算法容器 var aes = crypt.aes(); //设置密钥(最大32个字节) aes.setPassword(&#34;panda&amp;beta#12345&#34;); //设置模式 aes.setKeyParamMode(2/*_CRYPT_MODE_ECB*/); var encrypt_str = &#34;53zlG1UPM3fHdW4rbD8gEGf3MoOlgNFnypUvM9y2sKM=&#34;; //BASE64编码加密结果 //console.log( crypt.bin.encodeBase64( str ) ); //AES加密字符——&gt;BASE64字符 base64str = crypt.bin.decodeBase64(encrypt_str); //BASE64字符——&gt;普通字符 decrypt_str = aes.decrypt(base64str); console.log(decrypt_str); console.pause(true); ]]></description>
</item>
</channel>
</rss>
